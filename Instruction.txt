

No diretorio raiz do repo PRINCIPAL crie o modulo com os comandos abaixo
 - git submodule add <url do repo>
 - git commit -m "Added <nome do repo> submodule"

Esses comandos devem ser usados no diretorio raiz do repo PRINCIPAL quando
se faz um clone do repo PRINCIPAL
 - git submodule init
 - git submodule update

Esses comandos devem ser usados no diretorio raiz do repo PRINCIPAL quando
algum ou todos os repos dos modulos forem alterados.
git add <nome do repo alterado>
git commit -m "Upgraded <nome do repo alterado> to version XYZ"


This command must be used in repo Artigos/ when nested repo has changes
 - git submodule update --remote --merge

will fetch the latest changes from upstream in each submodule, merge them in, and check out
the latest revision of the submodule. As [the docs][1] put it:


Eu achei melhor usar da seguinte forma

Artigo/module

Fazer as alterações sempre nesse diretorio depois do clone do repo Artigo.
Quando as alterações estiverm terminadas faça o seguinte:

1 - No diretorio do módulo:
    git add *
    git commit -m "<texto>" <nome do módulo>
    gitpush.sh "Updated" <nome do módulo>
    cd ..
2 - Agora já no diretorio do módulo PRINCIPAL
    gitpush.sh "Updated" <nome do módulo PRINCIPAL>

    Pronto está atualizado na copia do repo PRINCIPAL e do repo do módulo.


